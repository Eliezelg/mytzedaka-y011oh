# nginx version: 1.24-alpine
# Sets the worker processes to auto-detect CPU cores
worker_processes auto;

# File descriptor limits
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    multi_accept on;
}

http {
    # Basic Settings
    charset UTF-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    client_max_body_size 50M;
    
    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Performance Tuning
    keepalive_timeout 65;
    keepalive_requests 1000;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 10;
    
    # File Cache Settings
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Advanced I/O
    aio threads;
    directio 512;
    output_buffers 2 32k;
    postpone_output 1460;
    request_pool_size 32k;

    # Compression Settings
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types text/plain
               text/css
               application/javascript
               application/json
               text/xml
               application/xml
               text/javascript
               application/x-javascript
               application/wasm
               application/x-font-ttf
               font/opentype
               application/vnd.ms-fontobject
               image/svg+xml;

    # Logging Configuration
    log_format custom_json '{"time": "$time_iso8601", '
                         '"remote_addr": "$remote_addr", '
                         '"request": "$request", '
                         '"status": "$status", '
                         '"body_bytes_sent": "$body_bytes_sent", '
                         '"http_referer": "$http_referer", '
                         '"http_user_agent": "$http_user_agent", '
                         '"request_time": "$request_time", '
                         '"upstream_response_time": "$upstream_response_time"}';

    access_log /var/log/nginx/access.log custom_json buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;

    # Main Server Configuration
    server {
        listen 80;
        listen 443 ssl http2;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # SSL Configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # Security Headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://js.tranzila.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https: blob:; font-src 'self' data:; connect-src 'self' https://api.stripe.com https://api.tranzila.com wss:; frame-src https://js.stripe.com https://js.tranzila.com; worker-src 'self' blob:; manifest-src 'self'; base-uri 'self'; form-action 'self'" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(self)" always;

        # Static Files Location
        location ^~ /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # API Proxy Configuration
        location ^~ /api/ {
            proxy_pass http://backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_buffers 8 16k;
            proxy_buffer_size 32k;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_connect_timeout 60s;
        }

        # WebSocket Configuration
        location ^~ /socket.io/ {
            proxy_pass http://backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # SPA Fallback
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }

        # Error Pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
    }
}