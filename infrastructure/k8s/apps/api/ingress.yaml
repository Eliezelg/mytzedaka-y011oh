apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ijap-api-ingress
  namespace: ijap
  labels:
    app: ijap
    component: api
    managed-by: kustomize
    tier: frontend
  annotations:
    # Ingress controller configuration
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-min-version: "TLSv1.3"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Timeout configurations for high availability
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    
    # Request size and rate limiting
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-connections: "50"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; frame-ancestors 'none';";

spec:
  tls:
    - hosts:
        - api.ijap.org
      secretName: ijap-api-tls
  rules:
    - host: api.ijap.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ijap-api
                port:
                  number: 80