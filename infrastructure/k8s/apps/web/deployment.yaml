apiVersion: apps/v1
kind: Deployment
metadata:
  name: ijap-web
  labels:
    app: ijap
    component: web
    managed-by: kustomize
    environment: ${ENVIRONMENT}
    compliance-level: pci-dss-l1
  annotations:
    description: "Web frontend deployment for IJAP"
    maintainer: "platform-team@ijap.org"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ijap
      component: web
  template:
    metadata:
      labels:
        app: ijap
        component: web
        environment: ${ENVIRONMENT}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
        checksum/config: ${CONFIG_CHECKSUM}
        security.policy/pci-dss: "enforced"
        security.policy/gdpr: "enforced"
    spec:
      containers:
      - name: web
        image: ijap/web:${VERSION}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
            httpHeaders:
            - name: X-Health-Check
              value: liveness
          initialDelaySeconds: 40
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: http
            httpHeaders:
            - name: X-Health-Check
              value: readiness
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 30
        env:
        - name: NODE_ENV
          value: production
        - name: API_URL
          valueFrom:
            configMapKeyRef:
              name: ijap-config
              key: api_url
        - name: TZ
          value: UTC
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
          readOnly: true
        - name: tmp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 101
          capabilities:
            drop:
            - ALL
      volumes:
      - name: nginx-config
        configMap:
          name: ijap-web-nginx-config
      - name: tmp
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        fsGroup: 101
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: ijap
                  component: web
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60